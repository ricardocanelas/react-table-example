{"version":3,"sources":["components/SearchForm.js","components/usePaginationRange.js","components/Table.js","App.js","utils/makeData.js","utils/mock.js","index.js"],"names":["SearchForm","onSubmit","className","e","preventDefault","formData","FormData","target","q","get","type","placeholder","name","usePaginationRange","hooks","stateReducers","push","reducer","useInstance","instance","pageRange","state","currentPage","pageIndex","totalPage","pageCount","ranges","rangeStart","rangeEnd","Math","min","i","Object","assign","pageRanges","pluginName","Table","props","columns","data","filter","onFetchData","initialState","controlledPageCount","loading","options","tableInstance","useTable","manualSortBy","manualPagination","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","sortBy","pageSize","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","previousParams","useRef","useEffect","hasFilterChanged","current","keys","some","key","params","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","id","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","length","renderEmpty","renderLoading","aria-label","onClick","index","gotoPageIndex","itemsPerPage","Array","isArray","value","onChange","Number","defaultProps","total","Header","accessor","App","fetchIdRef","useState","setState","useCallback","fetchId","fetch","then","res","json","result","values","trim","style","minHeight","range","len","arr","newPerson","statusChance","random","firstName","namor","generate","words","saltLength","lastName","age","floor","visits","progress","status","lens","makeDataLevel","depth","d","subRows","undefined","makeData","fetchMock","_url","opts","console","log","item","foundFirstname","toLowerCase","indexOf","foundLastname","foundAge","sortWith","desc","descend","prop","ascend","sort","start","slice","ceil","delay","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c88dc9e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SearchForm({ onSubmit }) {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    onSubmit({ q: formData.get(\"q\") });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-4\">\n        <form className=\"d-flex\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"search\"\n              name=\"q\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-sm ml-2\">\n            submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchForm;\n","const usePaginationRange = (hooks) => {\n  hooks.stateReducers.push(reducer);\n  hooks.useInstance.push(useInstance);\n};\n\nfunction useInstance(instance) {\n  let pageRange = instance.state.pageRange;\n  let currentPage = instance.state.pageIndex + 1;\n  let totalPage = instance.pageCount;\n  let ranges = [];\n\n  let rangeStart = currentPage - pageRange;\n  let rangeEnd = currentPage + pageRange;\n\n  if (rangeEnd > totalPage) {\n    rangeEnd = totalPage;\n    rangeStart = totalPage - pageRange * 2;\n    rangeStart = rangeStart < 1 ? 1 : rangeStart;\n  }\n\n  if (rangeStart <= 1) {\n    rangeStart = 1;\n    rangeEnd = Math.min(pageRange * 2 + 1, totalPage);\n  }\n\n  let i = 0;\n  if (rangeStart <= 3) {\n    for (i = 1; i < rangeStart; i++) {\n      ranges.push(i);\n    }\n  } else {\n    ranges.push(1);\n    ranges.push(\"...\");\n  }\n\n  for (i = rangeStart; i <= rangeEnd; i++) {\n    ranges.push(i);\n  }\n\n  if (rangeEnd >= totalPage - 2) {\n    for (i = rangeEnd + 1; i <= totalPage; i++) {\n      ranges.push(i);\n    }\n  } else {\n    ranges.push(\"...\");\n    ranges.push(totalPage);\n  }\n\n  Object.assign(instance, {\n    pageRanges: ranges,\n  });\n}\n\nfunction reducer(state) {\n  return {\n    pageRange: state.pageRange || 2,\n    ...state,\n  };\n}\n\nusePaginationRange.pluginName = \"usePaginationRange\";\n\nexport default usePaginationRange;\n","import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport usePaginationRange from \"./usePaginationRange\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\n\nconst Table = (props) => {\n  const {\n    className,\n    columns,\n    data,\n    filter,\n    onFetchData,\n    initialState,\n    pageCount: controlledPageCount,\n    loading,\n    options,\n  } = props;\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data: loading ? [] : data,\n      manualSortBy: true,\n      manualPagination: true,\n      pageCount: controlledPageCount,\n      initialState,\n    },\n    useSortBy,\n    usePagination,\n    usePaginationRange\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    state: { sortBy, pageIndex, pageSize },\n  } = tableInstance;\n\n  const {\n    page, // instead use 'rows', we'll use 'page'\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    pageRanges,\n  } = tableInstance;\n\n  const previousParams = useRef(null);\n\n  // When these table states change, fetch new data!\n  useEffect(() => {\n    let hasFilterChanged = false;\n\n    if (previousParams.current) {\n      hasFilterChanged = Object.keys(previousParams.current.filter).some(\n        (key) => {\n          return previousParams.current.filter[key] !== filter[key];\n        }\n      );\n    }\n\n    const params = { sortBy, pageIndex, pageSize, filter, hasFilterChanged };\n\n    if (hasFilterChanged && pageIndex !== 0) {\n      previousParams.current = params;\n      return gotoPage(0);\n    }\n\n    if (onFetchData) onFetchData(params, previousParams.current);\n\n    previousParams.current = params;\n  }, [gotoPage, onFetchData, sortBy, pageIndex, pageSize, filter]);\n\n  return (\n    <>\n      <table {...getTableProps()} className={`table ${className}`}>\n        {/* COLUMNS */}\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={`col-${column.id}`}\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n\n        {/* ROWS */}\n        <tbody {...getTableBodyProps()}>\n          {!loading &&\n            page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        className={`col-${cell.column.id}`}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n\n      {/* NOT FOUND */}\n      {!loading && data && data.length === 0 && props.renderEmpty()}\n\n      {/* LOADING */}\n      {loading && props.renderLoading()}\n\n      {/* PAGINATION */}\n      <div className=\"d-flex justify-content-between\">\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className={`page-item ${canPreviousPage ? \"\" : \"disabled\"}`}>\n              <button className=\"page-link\" onClick={() => gotoPage(0)}>\n                First Page\n              </button>\n            </li>\n            <li className={`page-item ${canPreviousPage ? \"\" : \"disabled\"}`}>\n              <button className=\"page-link\" onClick={() => previousPage()}>\n                Preview\n              </button>\n            </li>\n            {pageRanges.map((i, index) => {\n              const gotoPageIndex = i === \"...\" ? pageRanges[index - 1] : i - 1;\n              return (\n                <li\n                  key={index}\n                  className={`page-item ${\n                    pageIndex === i - 1 ? \"disabled\" : \"\"\n                  }`}\n                >\n                  <button\n                    className=\"page-link\"\n                    onClick={() => gotoPage(gotoPageIndex)}\n                  >\n                    {i}\n                  </button>\n                </li>\n              );\n            })}\n            <li className={`page-item ${canNextPage ? \"\" : \"disabled\"}`}>\n              <button className=\"page-link\" onClick={() => nextPage()}>\n                Next\n              </button>\n            </li>\n            <li className={`page-item ${canNextPage ? \"\" : \"disabled\"}`}>\n              <button\n                className=\"page-link\"\n                onClick={() => gotoPage(pageCount - 1)}\n              >\n                Last Page\n              </button>\n            </li>\n            <li className=\"page-item p-2 pl-3\">\n              Page{\" \"}\n              <strong>\n                {pageIndex + 1} of {pageOptions.length}\n              </strong>{\" \"}\n            </li>\n          </ul>\n        </nav>\n        {options.itemsPerPage && Array.isArray(options.itemsPerPage) && (\n          <div className=\"d-flex\">\n            <div className=\"form-group\">\n              <select\n                value={pageSize}\n                className=\"form-control\"\n                onChange={(e) => {\n                  setPageSize(Number(e.target.value));\n                }}\n              >\n                {options.itemsPerPage.map((pageSize) => (\n                  <option key={pageSize} value={pageSize}>\n                    Show {pageSize}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nTable.defaultProps = {\n  className: \"\",\n  columns: [],\n  data: [],\n  onFetchData: null,\n  total: 0,\n  initialState: {\n    pageIndex: 0,\n    pageSize: 5,\n    pageRange: 2,\n  },\n  options: {\n    itemsPerPage: [10, 30, 50],\n  },\n  filter: {},\n  renderLoading: () => <div>loading...</div>,\n  renderEmpty: () => <div>empty</div>,\n};\n\nTable.propTypes = {\n  className: PropTypes.string,\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array,\n  onFetchData: PropTypes.func,\n  total: PropTypes.number,\n  initialState: PropTypes.shape({\n    pageIndex: PropTypes.number,\n    pageSize: PropTypes.number,\n    pageRange: PropTypes.number,\n  }),\n  options: PropTypes.shape({\n    itemsPerPage: PropTypes.arrayOf(PropTypes.number),\n  }),\n  filter: PropTypes.shape({}),\n  renderLoading: PropTypes.func,\n};\n\nexport default Table;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport SearchForm from \"./components/SearchForm\";\nimport Table from \"./components/Table\";\n\nconst columns = [\n  { Header: \"Firstname\", accessor: \"firstName\" },\n  { Header: \"Lastname\", accessor: \"lastName\" },\n  { Header: \"Age\", accessor: \"age\" },\n];\n\nfunction App() {\n  const fetchIdRef = useRef(0);\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n    pageCount: 0,\n    filter: { q: \"\" },\n  });\n\n  const submit = (values) => {\n    setState((state) => ({ ...state, filter: { q: values.q.trim() } }));\n  };\n\n  const onFetchData = useCallback((params) => {\n    const fetchId = ++fetchIdRef.current;\n    setState((state) => ({ ...state, loading: true }));\n\n    fetch(\"http://example.com/users\", { params })\n      .then((res) => res.json())\n      .then((result) => {\n        // Only update the data if this is the latest fetch\n        if (fetchId === fetchIdRef.current) {\n          setState((state) => ({\n            ...state,\n            loading: false,\n            data: result.data,\n            pageCount: result.pageCount,\n          }));\n        }\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <SearchForm onSubmit={submit} />\n      <Table\n        className=\"mt-3\"\n        columns={columns}\n        data={state.data}\n        filter={state.filter}\n        onFetchData={onFetchData}\n        pageCount={state.pageCount}\n        pageIndex={state.pageIndex}\n        loading={state.loading}\n        options={{\n          itemsPerPage: [5, 10, 20, 30, 40],\n        }}\n        renderLoading={() => <div style={{ minHeight: 205 }}>Loading...</div>}\n        renderEmpty={() => <div style={{ minHeight: 205 }}>Not Found...</div>}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import namor from \"namor\";\n\nconst range = (len) => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst newPerson = () => {\n  const statusChance = Math.random();\n  return {\n    firstName: namor.generate({ words: 1, saltLength: 0 }),\n    lastName: namor.generate({ words: 1, saltLength: 0 }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status:\n      statusChance > 0.66\n        ? \"relationship\"\n        : statusChance > 0.33\n        ? \"complicated\"\n        : \"single\",\n  };\n};\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map((d) => {\n      return {\n        ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n","import fetchMock from \"fetch-mock\";\nimport makeData from \"./makeData\";\nimport { sortWith, descend, ascend, prop } from \"ramda\";\n\nconst data = makeData(72);\n\nfetchMock.get(\n  \"*\",\n  (_url, opts) => {\n    const params = opts ? opts.params : {};\n    const q = params.filter && params.filter.q ? params.filter.q : \"\";\n    let result = data;\n\n    console.log(\"[fetching]\", params);\n\n    if (q && q.trim() !== \"\") {\n      result = result.filter((item) => {\n        const foundFirstname =\n          item.firstName.toLowerCase().indexOf(q.toLowerCase()) !== -1;\n        const foundLastname =\n          item.lastName.toLowerCase().indexOf(q.toLowerCase()) !== -1;\n        const foundAge = item.age === Number(q);\n        return foundFirstname || foundLastname || foundAge;\n      });\n    }\n\n    if (params.sortBy) {\n      const sort = sortWith(\n        params.sortBy.map((item) => {\n          if (item.desc) return descend(prop(item.id));\n          return ascend(prop(item.id));\n        })\n      );\n      result = sort(result);\n    }\n\n    const total = result.length;\n\n    if (params.pageIndex >= 0 && params.pageSize) {\n      const start = params.pageIndex * params.pageSize;\n      result = result.slice(start, start + params.pageSize);\n    }\n\n    return {\n      data: result,\n      total: total,\n      pageCount: Math.ceil(total / params.pageSize),\n    };\n  },\n  { delay: 1000 }\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./utils/mock\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}